[build-system]
build-backend = "setuptools.build_meta"

requires = [ "setuptools>=64", "wheel" ]

[project]
name = "mmcontext"
version = "0.0.1"
description = "This package allows to use the sentence-transfomers package to build multimodal embedding models for data in anndata format."
readme = "README.md"
license = { file = "LICENSE" }
maintainers = [
  { name = "Jonatan Menger", email = "jonatan.menger@gmail.com" },
]
authors = [
  { name = "Jonatan Menger" },
]
requires-python = ">=3.10,<3.13"
classifiers = [
  "Programming Language :: Python :: 3 :: Only",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3.12",
]
dependencies = [
  #  "accelerate>=0.33",
  #  "hydra-core>=1.3.2",
  #  "numba==0.60",           # was needed due to issues with scanpy and scib automatic load
  #  "python-dotenv>=1.0.1",
  #  "wandb>=0.19.6",
  #  "wordcloud>=1.9.4",
  #  "zarr<=2.18.4",
  "accelerate>=1.7",
  "anndata>=0.11.4",
  "hydra-core>=1.3.2",
  "ipykernel>=6.29.5",
  "matplotlib>=3.10.3",
  "numpy>=1.26.4",
  "omegaconf>=2.3",
  "psutil>=6.1.1",
  "pynvml>=12",
  "python-dotenv>=1.1",
  "requests>=2.32.3",
  "scanpy>=1.11.1",
  "scib>=1.1.7",
  "scikit-learn>=1.5.2",
  "seaborn>=0.13.2",
  "sentence-transformers>=4.1.0.dev0",
  "session-info>=1.0.1",
  "torch>=2.7",
  "wandb>=0.19.11",
  "wordcloud>=1.9.4",
  "zarr>=2.18.3",
]
optional-dependencies.dev = [
  "pre-commit",
  "twine",
  # other dev dependencies...
]
optional-dependencies.doc = [
  "docutils>=0.8,!=0.18.*,!=0.19.*",
  "ipykernel",
  "ipython",
  "myst-nb>=1.1",
  "pandas",
  "setuptools",
  "sphinx>=4",
  "sphinx-autodoc-typehints",
  "sphinx-book-theme>=1",
  "sphinx-copybutton",
  "sphinx-tabs",
  "sphinxcontrib-bibtex>=1",
  "sphinxext-opengraph",
]
optional-dependencies.test = [
  "coverage",
  "pytest",
  "python-json-logger",
]
urls.Documentation = "https://mmcontext.readthedocs.io/"
urls.Homepage = "https://github.com/mengerj/mmcontext"
urls.Source = "https://github.com/mengerj/mmcontext"

[tool.setuptools]
include-package-data = true
[tool.setuptools.packages.find]
where = [ "src" ]
include = [ "mmcontext*" ]
[tool.setuptools.package-data]
#"mmcontext.conf" = [ "*.json" ]

[tool.ruff]
line-length = 120
src = [ "src" ]
extend-include = [ "*.ipynb" ]

format.docstring-code-format = true

lint.select = [
  "B",      # flake8-bugbear
  "C4",     # flake8-comprehensions
  "D",      # pydocstyle
  "E",      # Error detected by Pycodestyle
  "F",      # Errors detected by Pyflakes
  "I",      # isort
  "RUF100", # Report unused noqa directives
  "TID",    # flake8-tidy-imports
  "UP",     # pyupgrade
  "W",      # Warning detected by Pycodestyle
]

lint.ignore = [
  "B008",   # function calls in argument defaults
  "BLE001", # allow blind expections
  "D100",   # Missing docstring in public module
  "D104",   # Missing docstring in public package
  "D105",   # allow missing docstrings for __magic__ methods
  "D107",   # Missing docstring in __init__
  "D203",   # We don’t want a blank line before a class docstring
  "D213",   # We want docstrings to start immediately after triple quote
  "D400",   # first line should end with a period
  "D401",   # first line should be in imperative mood
  "E501",   # line too long
  "E731",   # lambdas are allowed
  "E741",   # allow I, O, l as variable names
  "F401",   # dont remove unused imports, because of fiass flag
]

lint.per-file-ignores."*/__init__.py" = [ "F401" ]
lint.per-file-ignores."docs/*" = [ "I" ]
lint.per-file-ignores."tests/*" = [ "D" ]
lint.pydocstyle.convention = "numpy"

[tool.flake8]
ignore = [
  "C408",  # ignore “Rewrite as literal” from flake8-comprehensions
  "UP031",
]

[tool.pytest.ini_options]
testpaths = [ "tests" ]
xfail_strict = true
addopts = [
  "--import-mode=importlib",
]

[tool.coverage.run]
source = [ "mmcontext" ]
omit = [
  "**/test_*.py",
]

[tool.cruft]
skip = [
  "tests",
  "src/**/__init__.py",
  "src/**/basic.py",
  "docs/api.md",
  "docs/changelog.md",
  "docs/references.bib",
  "docs/references.md",
  "docs/notebooks/example.ipynb",
]

[tool.uv.sources]
sentence-transformers = { git = "https://github.com/mengerj/sentence-transformers.git", rev = "master" }
